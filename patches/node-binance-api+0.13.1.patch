diff --git a/node_modules/node-binance-api/node-binance-api.d.ts b/node_modules/node-binance-api/node-binance-api.d.ts
index 2740525..d67f166 100644
--- a/node_modules/node-binance-api/node-binance-api.d.ts
+++ b/node_modules/node-binance-api/node-binance-api.d.ts
@@ -508,10 +508,11 @@ declare module "node-binance-api" {
         * Cancels an order
         * @param {string} symbol - the symbol to cancel
         * @param {string} orderid - the orderid to cancel
+        * @param {string} clientOrderId - clientOrderId (auto generated by default)
         * @param {function} callback - the callback function
         * @return {promise or undefined} - omitting the callback returns a promise
         */
-        cancel(symbol: _symbol, orderid: string, callback?: _callback): Promise<any>;
+        cancel(symbol: _symbol, orderid: string, clientOrderId: string, callback?: _callback): Promise<any>;
         cancel(...args: any): any;
 
         /**
diff --git a/node_modules/node-binance-api/node-binance-api.js b/node_modules/node-binance-api/node-binance-api.js
index 6da6165..56eb683 100644
--- a/node_modules/node-binance-api/node-binance-api.js
+++ b/node_modules/node-binance-api/node-binance-api.js
@@ -2990,10 +2990,11 @@ let api = function Binance( options = {} ) {
         * Cancels an order
         * @param {string} symbol - the symbol to cancel
         * @param {string} orderid - the orderid to cancel
+        * @param {string} clientOrderId - clientOrderId (it will be generated by default)
         * @param {function} callback - the callback function
         * @return {promise or undefined} - omitting the callback returns a promise
         */
-        cancel: function ( symbol, orderid, callback = false ) {
+        cancel: function ( symbol, orderid, clientOrderId, callback = false ) {
             if ( !callback ) {
                 return new Promise( ( resolve, reject ) => {
                     callback = ( error, response ) => {
@@ -3003,12 +3004,12 @@ let api = function Binance( options = {} ) {
                             resolve( response );
                         }
                     }
-                    signedRequest( base + 'v3/order', { symbol: symbol, orderId: orderid }, function ( error, data ) {
+                    signedRequest( base + 'v3/order', { symbol: symbol, orderId: orderid, newClientOrderId: clientOrderId }, function ( error, data ) {
                         return callback.call( this, error, data, symbol );
                     }, 'DELETE' );
                 } )
             } else {
-                signedRequest( base + 'v3/order', { symbol: symbol, orderId: orderid }, function ( error, data ) {
+                signedRequest( base + 'v3/order', { symbol: symbol, orderId: orderid, newClientOrderId: clientOrderId }, function ( error, data ) {
                     return callback.call( this, error, data, symbol );
                 }, 'DELETE' );
             }
